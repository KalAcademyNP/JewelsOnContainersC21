networks:
  frontend:
  backend:

services:
  catalog:
    image: jewels/catalogapi
    build:
      context: ./ProductCatalogAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=CatalogDb;User Id=sa;Password=ProductApi123(!);Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;"
      ExternalBaseUrl: "http://localhost:7000"
      ASPNETCORE_HTTP_PORTS: 80
    ports:
      - "7000:80"
      - "7001:443"
    container_name: jewelscatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  tokenserver:
    image: jewels/authapi
    build:
      context: ./AuthAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=tokensqlserver;Initial Catalog=TokenServiceDb;User Id=sa;Password=TokenApi123(!);Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;"
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 80
      JWT__Secret: "your_net_net_net_new_base64_encoded_key"
      JWT__Issuer: "auth-api"
      JWT__Audience: "auth-client"
    ports:
      - "7010:80"
    container_name: jewelsauthapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokensqlserver

  webmvc:
    image: jewels/webmvc
    build:
      context: ./WebMVC
      dockerfile: Dockerfile
    environment:
      CatalogUrl: http://catalog
      IdentityUrl: http://tokenserver
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 80
    ports:
      - "7500:80"
    container_name: webshop
    networks:
      - frontend
    depends_on:
      - catalog
      - tokenserver

  mssqlserver:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: ProductApi123(!)
    ports:
      - "1448:1433"
    container_name: jewelscatalogsqlserver
    networks:
      - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: TokenApi123(!)
    ports:
      - "1449:1433"
    container_name: jewelstokensqlserver
    networks:
      - backend 

